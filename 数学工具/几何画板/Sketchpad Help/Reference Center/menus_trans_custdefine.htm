<!DOCTYPE HTML>
<html>
<head>
   <title>Menus &gt; Transform Menu &gt; Define Custom Transform</title>
   <meta name="generator" content="Help & Manual">
   <meta name="keywords" content="Custom Transformed Images,Define Custom Transform Command,Dialog Boxes,Dialog Boxes Define Custom Transform,Glide Reflection,Sampled Transformed Paths,Sampled Transformed Pictures,Scaling,Transform Menu,Transform Menu Define Custom Transform">
   <meta name="description" content="Define Custom Transform">
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="X-UA-Compatible" content="IE=edge" />
   <link type="text/css" href="styles.css" rel="stylesheet">
   <link type="text/css" href="custom.css" rel="stylesheet">
   <script type="text/javascript" src="nsh.js"></script>

<script type="text/javascript">   
// Toggle Toggler 

var toggleCount=false;
var switchState;

function toggleToggles() {

    if (!toggleCount) {
     toggleCount = true;
     HMToggleExpandAll(true);
     switchState = true;
     }
   
     else if (switchState) {
        HMToggleExpandAll(false);
        switchState = false;
        }
        
     else  {
        HMToggleExpandAll(true);
        switchState = true;
        } 
    }
</script>
   
<!-- non-scrolling headers for CHM and browser-based help, local styles-->
<style type="text/css" media="screen"> 
html, body { margin:0; 
   padding:0; 
   overflow: hidden; 
   background: #FFFFFF; 
  }
 
div#printheader { 
   display: none;
   padding-bottom: 10px;
   }
   #idheader { 
      width:100%; 
      height:auto; 
      padding: 0; 
      margin: 0; 
} 
    #idheaderbg  {
    background: #6F6F6F; 
}
   #callout-table, #overview-table {display:block; position:relative; top:0; left:0;}
   #callout-icon {display:block; position:absolute; top:-11px; left:-11px;}
   #callout-icon-flag {display:block; position:absolute; top:-11px; left:-8px;}
   #callout-table a {text-decoration: none; color: blue;}
   #callout-table a:visited {text-decoration: none; color: blue;}
   #overview-table a {text-decoration: none; color: black;}
   #overview-table a:visited {text-decoration: none; color: black;}
   #callout-table a:hover, #overview-table a:hover {text-decoration: underline;}
   p.help-url { margin: 20px 0 5px 0; text-align: center; font-size: 80%; text-decoration: none }
   </style>
<!--[if lt IE 7]>
<style type="text/css">
  #idcontent {padding: 0px;} 
  #innerdiv {padding: 10px 5px 5px 10px ;} 
</style> 
<![endif]-->
<noscript>
<style type="text/css">
html, body { overflow: auto; }
</style> 
</noscript>
<style type="text/css" media="print">
span.f_Heading1 { color: black; }
#idheader, #printheader img { display:none; }
#printheader { display: block; margin-top: 20px; }
#idcontent { margin-top: 10px; }
</style>   
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "menus_trans_custdefine.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body>
<!--ZOOMSTOP-->

<div id="printheader"><h1 class="p_Heading1"><span class="f_Heading1">Define Custom Transform</span></h1>
</div> 
<div id="idheader">
<div id="idheaderbg">
<table width="100%" border="0" cellspacing="0" cellpadding="0" 
       style="margin: 0px; background: url(header_bg.jpg);">

  <tr valign="bottom">
    <td align="left" valign="bottom" class="topichead">
   <p class="crumbs" id="idnav"><b>Navigation:</b>&nbsp;
   
   <a href="menus.htm">Menus</a> &gt; <a href="menus_trans.htm">Transform Menu</a>&nbsp;&gt;</p>
   <h1 class="p_Heading1"><span class="f_Heading1">Define Custom Transform</span></h1>

    </td>
    <td align="right" width="120" valign="middle" class="topichead" id="idnav">
    
     <a href="menus_trans_iter_multmaps.htm"
        onmouseover="document.images.prev.src='btn_prev_h.gif'" 
        onmouseout="document.images.prev.src='btn_prev_n.gif'"
        ><img name=prev src="btn_prev_n.gif" border=0 alt="Previous page"
        ></a><a href="menus_trans.htm"
        onmouseover="document.images.main.src='btn_home_h.gif'" 
        onmouseout="document.images.main.src='btn_home_n.gif'"><img name=main src="btn_home_n.gif" border=0 alt="Return to chapter overview"
        ></a><a href="menus_trans_custedit.htm"
        onmouseover="document.images.next.src='btn_next_h.gif'" 
        onmouseout="document.images.next.src='btn_next_n.gif'"><img name=next src="btn_next_n.gif" border=0 alt="Next page"
        ></a>
    </td>
  </tr>
  <tr><td colspan="2" style="height: 3px; background: url(header_bg_shadow.gif)"></td></tr>
</table>
</div>

<!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
   
  <table id="idnav" class="expander">
  <tr><td><a href="javascript:toggleToggles()" title="Click to open/close expanding sections">Show/Hide Hidden Text</a>
  </td></tr></table>
  

</div>  



<div id="idcontent"><div id="innerdiv"> 
<!--ZOOMRESTART-->
<p class="p_BodyText"><span class="f_BodyText" style="font-style: italic; font-weight: bold;">Selection prerequisites:</span><span class="f_BodyText" style="font-style: italic;"> Two points, one of which depends on the other</span></p>
<p class="p_BodyText"><span class="f_BodyText">This <a href="menus_trans.htm" class="topiclink">Transform</a> menu command defines a custom transformation. </span></p>
<p class="p_BodyText"><span class="f_BodyText">A custom transformation is a general transformation, defined by an example that involves two points: a pre-image point and an image point that depends on the pre-image point. When you apply such a transformation to another object, every point of the object undergoes the same transformation that relates the defining points.</span></p>
<p class="p_BodyText"><span class="f_BodyText">The relationship between the pre-image and image points can involve any combination of geometric operations (constructions and transformations) and numeric and algebraic operations (measurements, calculations, functions, and plotting). This generality makes it possible to define an extremely wide variety of custom transformations.</span></p>
<p class="p_Image_FlushRight_Narrative"><img src="transform_custom_dlg_zoom75.png" width="236" height="116" alt="" style="float:right;margin:0px 0px 0px 0px; border:none" /></p>
<p class="p_BodyText"><span class="f_BodyText">To create the transformation, select the pre-image and image points and choose </span><span class="f_BodyText" style="font-weight: bold;"><a href="menus_trans.htm" class="topiclink">Transform</a> | Define Custom Transform.</span><span class="f_BodyText"> In the dialog box that appears, give the transformation a name, such as </span><span class="f_BodyText" style="font-weight: bold;">Glide Reflect.</span><span class="f_BodyText"> This new transformation &nbsp;appears as a command at the bottom of the Transform menu. To apply this transformation to another object in your sketch, select that object and choose </span><span class="f_BodyText" style="font-weight: bold;">Transform | Glide Reflect.</span><span class="f_BodyText"> You can also apply a custom transformations using numbered keyboard shortcuts (in Windows Ctrl+1, Ctrl+2, and so forth; on Mac, </span><img src="cloverleaf.png" width="12" height="9" alt="" style="border:none" /><span class="f_BodyText">1, </span><img src="cloverleaf.png" width="12" height="9" alt="" style="border:none" /><span class="f_BodyText">2, and so forth).</span></p>
<div style="text-align: left; text-indent: 0px; border-color: #008080; border-style: solid; border-width: 1px; background: #effaf5; padding: 2px 2px 2px 2px; margin: 8px 0px 0px 0px;"><table style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr style="vertical-align:baseline"><td style="border:none;padding:0;width:18px"><img id="TOGGLE0186A1_ICON" src="hmtoggle_plus1.gif" width="11" height="11" alt="" style="border:none" /></td><td style="border:none;padding:0"><span class="f_CollapsibleSubhead"><a class="dropdown-toggle" href="javascript:HMToggle('toggle','TOGGLE0186A1','TOGGLE0186A1_ICON')">Example 1: Glide Reflect</a></span></td></tr></table></div><div id="TOGGLE0186A1" style="text-align: left; text-indent: -22px; padding: 0px 0px 0px 0px; margin: 7px 0px 0px 22px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p class="p_BodyText"><span class="f_BodyText">A glide reflection is a combination of two basic transformations built into Sketchpad: a reflection across a mirror line combined with a translation parallel to the mirror. To define a glide reflection as a custom transformation, reflect point </span><span class="f_BodyText" style="font-style: italic;">A</span><span class="f_BodyText"> across a mirror, and then translate it by the vector from </span><span class="f_BodyText" style="font-style: italic;">B</span><span class="f_BodyText"> to </span><span class="f_BodyText" style="font-style: italic;">C,</span><span class="f_BodyText"> parallel to the mirror. Use points </span><span class="f_BodyText" style="font-style: italic;">A</span><span class="f_BodyText"> and </span><span class="f_BodyText" style="font-style: italic;">A</span><span class="f_BodyText">'' </span><span class="f_BodyText">to define the custom transformation. Then apply the transformation repeatedly to a pre-image picture to produce a glide reflection.</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 7px 0px 0px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:middle;">
<td style="vertical-align:middle; padding:0px;"><p style="text-align: center;"><img src="transfrm_cust_glide_zoom75.png" width="154" height="100" alt="" style="border:none" /></p>
</td>
<td style="vertical-align:middle; padding:0px;"><p style="text-align: center;"><img src="transfrm_cust_glide2_zoom75.png" width="370" height="207" alt="" style="border:none" /></p>
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
</div>
<div style="text-align: left; text-indent: 0px; border-color: #008080; border-style: solid; border-width: 1px; background: #effaf5; padding: 2px 2px 2px 2px; margin: 8px 0px 0px 0px;"><table style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr style="vertical-align:baseline"><td style="border:none;padding:0;width:18px"><img id="TOGGLE0186A2_ICON" src="hmtoggle_plus1.gif" width="11" height="11" alt="" style="border:none" /></td><td style="border:none;padding:0"><span class="f_CollapsibleSubhead"><a class="dropdown-toggle" href="javascript:HMToggle('toggle','TOGGLE0186A2','TOGGLE0186A2_ICON')">Example 2: Scale Horizontally</a></span></td></tr></table></div><div id="TOGGLE0186A2" style="text-align: left; text-indent: -22px; padding: 0px 0px 0px 0px; margin: 7px 0px 0px 22px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p class="p_BodyText"><span class="f_BodyText"><a href="menus_trans_dilate.htm" class="topiclink">Dilating</a> an object scales it both horizontally and vertically. To scale an object only horizontally but not vertically, you must define a custom transformation. One way of defining such a transformation is to measure the coordinates of the point to be scaled, multiply the </span><span class="f_BodyText" style="font-style: italic;">x</span><span class="f_BodyText">-value by a scale factor (leaving the </span><span class="f_BodyText" style="font-style: italic;">y</span><span class="f_BodyText">-value unchanged), and plot the scaled point </span><span class="f_BodyText" style="font-style: italic;">A</span><span class="f_BodyText">' defined by the new coordinates. Apply the resulting transformation to a circle (to create an ellipse) or to a picture (to stretch it horizontally but not vertically).</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 7px 0px 0px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:middle;">
<td style="vertical-align:middle; padding:0px;"><p style="text-align: center;"><img src="transform_hscale1_zoom75.png" width="209" height="130" alt="" style="border:none" /></p>
</td>
<td style="vertical-align:middle; padding:0px;"><p style="text-align: center;"><img src="transform_hscale2_zoom75.png" width="243" height="102" alt="" style="border:none" /></p>
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
</div>
<div style="text-align: left; text-indent: 0px; border-color: #008080; border-style: solid; border-width: 1px; background: #effaf5; padding: 2px 2px 2px 2px; margin: 8px 0px 0px 0px;"><table style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr style="vertical-align:baseline"><td style="border:none;padding:0;width:18px"><img id="TOGGLE0186A3_ICON" src="hmtoggle_plus1.gif" width="11" height="11" alt="" style="border:none" /></td><td style="border:none;padding:0"><span class="f_CollapsibleSubhead"><a class="dropdown-toggle" href="javascript:HMToggle('toggle','TOGGLE0186A3','TOGGLE0186A3_ICON')">Example 3: Swirl</a></span></td></tr></table></div><div id="TOGGLE0186A3" style="text-align: left; text-indent: -22px; padding: 0px 0px 0px 0px; margin: 7px 0px 0px 22px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p class="p_BodyText"><span class="f_BodyText">One way to create a swirling effect is to start with a center point </span><span class="f_BodyText" style="font-style: italic;">C</span><span class="f_BodyText"> and a pre-image point </span><span class="f_BodyText" style="font-style: italic;">P</span><span class="f_BodyText"> and then rotate </span><span class="f_BodyText" style="font-style: italic;">P</span><span class="f_BodyText"> by an angle that gets larger as </span><span class="f_BodyText" style="font-style: italic;">P</span><span class="f_BodyText"> gets farther from </span><span class="f_BodyText" style="font-style: italic;">C</span><span class="f_BodyText">. To define such a rotation, measure the distance </span><span class="f_BodyText" style="font-style: italic;">CP</span><span class="f_BodyText"> and calculate an angle by multiplying the distance by 10°/1 cm. (Divide by 1 cm so that the units of the result are in degrees.) Rotate </span><span class="f_BodyText" style="font-style: italic;">P</span><span class="f_BodyText"> by this calculated angle and then use points </span><span class="f_BodyText" style="font-style: italic;">P</span><span class="f_BodyText"> and </span><span class="f_BodyText" style="font-style: italic;">P'</span><span class="f_BodyText"> to define a custom transformation. Apply the resulting custom transformation to the pre-image on the left to produce the image on the right.</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 7px 0px 0px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:middle;">
<td style="vertical-align:middle; padding:0px;"><p style="text-align: center;"><img src="transform_menu_cust_swirl.png" width="255" height="288" alt="" style="border:none" /></p>
</td>
<td style="vertical-align:middle; padding:0px;"><p style="text-align: center;"><img src="transform_swirl2.png" width="255" height="288" alt="" style="border:none" /></p>
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
</div>
<div style="text-align: left; text-indent: 0px; border-color: #008080; border-style: solid; border-width: 1px; background: #effaf5; padding: 2px 2px 2px 2px; margin: 8px 0px 0px 0px;"><table style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr style="vertical-align:baseline"><td style="border:none;padding:0;width:18px"><img id="TOGGLE0186A4_ICON" src="hmtoggle_plus1.gif" width="11" height="11" alt="" style="border:none" /></td><td style="border:none;padding:0"><span class="f_CollapsibleSubhead"><a class="dropdown-toggle" href="javascript:HMToggle('toggle','TOGGLE0186A4','TOGGLE0186A4_ICON')">Custom Transformed Images</a></span></td></tr></table></div><div id="TOGGLE0186A4" style="text-align: left; text-indent: -22px; padding: 0px 0px 0px 0px; margin: 7px 0px 0px 22px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p class="p_BodyText"><span class="f_BodyText">When a custom transformation (such as a glide reflection) is made up of one or more of Sketchpad’s basic transformations (translations, rotations, dilations, and/or reflections), images created by the custom transformation are always similar to their pre-images. Angles are the same, and distances are always in the same ratio. Transformed images of straight objects are remain straight objects, transformed images of circles remain circles, and transformed polygons are similar to their pre-image polygons. Consequently, you can use these transformed images in the same way as their pre-images: you can find the midpoint of a transformed segment, you can find the radius of a transformed circle, and you can measure the perimeter and area of a transformed polygon.</span></p>
<p class="p_BodyText"><span class="f_BodyText">But when a custom transformation (such as horizontal scaling or swirling) includes steps different from the basic transformations, there is no guarantee that the resulting images are similar to their pre-images. When a straight object (like the yellow line on the road in the example) is transformed, the result may be curved. When a circle is transformed, the result may be an ellipse, or may be some entirely different shape. The image of a polygon may not have straight edges. With such a transformation, you cannot use the transformed images in the same way as the pre-images. The image of a segment is not straight, so you cannot construct a parallel or perpendicular to it. The image of a circle isn’t circular, so you cannot measure its radius. The image of a polygon does not have straight edges, and the image of the polygon’s interior may even be outside of its frame.</span></p>
<p class="p_BodyText"><span class="f_BodyText">When a path object is transformed by such a transformation, the resulting image is a <a href="objects_cats_paths.htm#sampledtransformedpaths" class="topiclink">sampled transformed path</a> such as the stretched circle in Example 2 above. Sketchpad calculates the shape of the transformed path by using points on the pre-image path and transforming them to locate the image path. Each such transformed point produces one sample on the transformed path; the full image path is made up of many such samples. Choose </span><span class="f_BodyText" style="font-weight: bold;"><a href="objects_cats_plot_locprops.htm" class="topiclink">Edit | Properties | Plot</a></span><span class="f_BodyText"> to set the number of samples used to display such an object and to determine whether it’s displayed continuously or discretely.</span></p>
<p class="p_BodyText"><span class="f_BodyText">When a picture is transformed by such a transformation, the resulting image is a <a href="transforming_pictures.htm#sampledtransformedpictures" class="topiclink">sampled transformed picture</a>; Sketchpad calculates the transformed picture by using small rectangles from the pre-image picture and transforming them to display the resulting transformed picture. Each such transformed rectangle produces one sample of the transformed picture; the full picture is made up of many such samples. Choose </span><span class="f_BodyText" style="font-weight: bold;"><a href="objects_cat_plot_sampledpic.htm" class="topiclink">Edit | Properties | Plot</a></span><span class="f_BodyText"> to set the number of samples used to display such a picture and to determine how much distortion is allowed in the sample rectangles.</span></p>
</td>
</tr>
</table>
</div>
<p class="p_BodyText" style="text-indent: -22px; margin: 7px 0px 0px 22px;"><span class="f_BodyText">&nbsp;</span></p>

<!--ZOOMSTOP-->
</div></div>
<script type="text/javascript">

var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
{
 if (document.all) setTimeout(function() {nsrInit();},20); 
    else nsrInit();
 } 


</script>
<script type="text/javascript">
HMInitToggle('TOGGLE0186A1_ICON','hm.type','dropdown','hm.state','0','hm.src0','hmtoggle_plus0.gif','hm.src1','hmtoggle_plus1.gif','onclick','HMToggle(\'toggle\',\'TOGGLE0186A1\',\'TOGGLE0186A1_ICON\')');
HMInitToggle('TOGGLE0186A1','hm.type','dropdown','hm.state','0');
HMInitToggle('TOGGLE0186A2_ICON','hm.type','dropdown','hm.state','0','hm.src0','hmtoggle_plus0.gif','hm.src1','hmtoggle_plus1.gif','onclick','HMToggle(\'toggle\',\'TOGGLE0186A2\',\'TOGGLE0186A2_ICON\')');
HMInitToggle('TOGGLE0186A2','hm.type','dropdown','hm.state','0');
HMInitToggle('TOGGLE0186A3_ICON','hm.type','dropdown','hm.state','0','hm.src0','hmtoggle_plus0.gif','hm.src1','hmtoggle_plus1.gif','onclick','HMToggle(\'toggle\',\'TOGGLE0186A3\',\'TOGGLE0186A3_ICON\')');
HMInitToggle('TOGGLE0186A3','hm.type','dropdown','hm.state','0');
HMInitToggle('TOGGLE0186A4_ICON','hm.type','dropdown','hm.state','0','hm.src0','hmtoggle_plus0.gif','hm.src1','hmtoggle_plus1.gif','onclick','HMToggle(\'toggle\',\'TOGGLE0186A4\',\'TOGGLE0186A4_ICON\')');
HMInitToggle('TOGGLE0186A4','hm.type','dropdown','hm.state','0');
</script>
</body>
</html>








